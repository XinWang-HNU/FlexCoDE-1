% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basicFunctions (CÃ³pia em conflito de rizbicki-Gazelle-Professional 2017-10-04).R, R/basicFunctions.R
\name{bindFlexCoDE}
\alias{bindFlexCoDE}
\title{Binds together objects of the class "FlexCoDE"}
\usage{
bindFlexCoDE(objectCDE1, objectCDE2, ...)

bindFlexCoDE(objectCDE1, objectCDE2, ...)
}
\arguments{
\item{objectCDE1}{An object of the class FlexCoDE with a fitted CDE, typically fitted used \code{\link{fitFlexCoDE}} beforehand}

\item{objectCDE2}{An object of the class FlexCoDE with a fitted CDE, typically fitted used \code{\link{fitFlexCoDE}} beforehand}

\item{...}{other objects of the class FlexCoDE with a fitted CDE, typically fitted used \code{\link{fitFlexCoDE}} beforehand}

\item{objectCDE1}{An object of the class FlexCoDE with a fitted CDE, typically fitted used \code{\link{fitFlexCoDE}} beforehand}

\item{objectCDE2}{An object of the class FlexCoDE with a fitted CDE, typically fitted used \code{\link{fitFlexCoDE}} beforehand}

\item{...}{other objects of the class FlexCoDE with a fitted CDE, typically fitted used \code{\link{fitFlexCoDE}} beforehand}
}
\value{
list with all objects combined. Result is of the class "FlexCoDE_binded"

list with all objects combined. Result is of the class "FlexCoDE_binded"
}
\description{
Binds together objects of the class "FlexCoDE"

Binds together objects of the class "FlexCoDE"
}
\examples{
set.seed(400)

# generate data
n=1000
d=10
data=matrix(NA,n,d+1)
data[,1:d]=matrix(rnorm(n*d),n,d)
data[,d+1]=data[,1]+rnorm(n,0,0.1)

# determine sample sizes
nTrain=round(0.7*n)
nValidation=round(0.25*n)
nTest=n-nTrain-nValidation

# split data
randomIndex=sample(1:n)
xTrain=data[randomIndex[1:nTrain],1:d]
xValidation=data[randomIndex[(nTrain+1):(nTrain+nValidation)],1:d]
xTest=data[randomIndex[(nTrain+nValidation+1):n],1:d]
zTrain=data[randomIndex[1:nTrain],d+1]
zValidation=data[randomIndex[(nTrain+1):(nTrain+nValidation)],d+1]
zTest=data[randomIndex[(nTrain+nValidation+1):n],d+1]

############################################################
###### fit 3 FlexCoDE estimators
############################################################
fit1=fitFlexCoDE(xTrain,zTrain,xValidation,zValidation,xTest,zTest,
            nIMax = 20,regressionFunction = regressionFunction.NN)
fit2=fitFlexCoDE(xTrain,zTrain,xValidation,zValidation,xTest,zTest,
                nIMax = 50,regressionFunction = regressionFunction.SpAM)
fit3=fitFlexCoDE(xTrain,zTrain,xValidation,zValidation,xTest,zTest,
                nIMax = 30,regressionFunction = regressionFunction.Forest)


############################################################
######## Bind estimators to plot them
############################################################

fitBind=bindFlexCoDE(fit1,fit2,fit3)
plot(fitBind,xTest,zTest,nPlots = 4)
set.seed(400)

# generate data
n=1000
d=10
data=matrix(NA,n,d+1)
data[,1:d]=matrix(rnorm(n*d),n,d)
data[,d+1]=data[,1]+rnorm(n,0,0.1)

# determine sample sizes
nTrain=round(0.7*n)
nValidation=round(0.25*n)
nTest=n-nTrain-nValidation

# split data
randomIndex=sample(1:n)
xTrain=data[randomIndex[1:nTrain],1:d]
xValidation=data[randomIndex[(nTrain+1):(nTrain+nValidation)],1:d]
xTest=data[randomIndex[(nTrain+nValidation+1):n],1:d]
zTrain=data[randomIndex[1:nTrain],d+1]
zValidation=data[randomIndex[(nTrain+1):(nTrain+nValidation)],d+1]
zTest=data[randomIndex[(nTrain+nValidation+1):n],d+1]

############################################################
###### fit 3 FlexCoDE estimators
############################################################
fit1=fitFlexCoDE(xTrain,zTrain,xValidation,zValidation,xTest,zTest,
            nIMax = 20,regressionFunction = regressionFunction.NN)
fit2=fitFlexCoDE(xTrain,zTrain,xValidation,zValidation,xTest,zTest,
                nIMax = 50,regressionFunction = regressionFunction.SpAM)
fit3=fitFlexCoDE(xTrain,zTrain,xValidation,zValidation,xTest,zTest,
                nIMax = 30,regressionFunction = regressionFunction.Forest)


############################################################
######## Bind estimators to plot them
############################################################

fitBind=bindFlexCoDE(fit1,fit2,fit3)
plot(fitBind,xTest,zTest,nPlots = 4)
}

